@model ChatManager.Models.User
@{
    ViewBag.Title = "Profil";
    bool subscribing = Model.Id == 0;
    string pageTitle = subscribing ? "Inscription" : "Profil";
    string formSubmitCaption = subscribing ? "S'inscrire" : "Enregistrer";
}

<h2>Modifier le profil</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.GenderId)
    @Html.HiddenFor(m => m.Password)
    @Html.HiddenFor(m => m.ConfirmPassword)
    <div class="form-horizontal">

        <fieldset class="formField">
            <div class="legend">Identification</div>
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.FirstName) } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            <br />
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.LastName) } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </fieldset>

        <fieldset class="formField">
            <div class="legend">@Html.DisplayNameFor(model => model.Email)</div>
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Email) } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            <br />
            @Html.EditorFor(model => model.ConfirmEmail, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.ConfirmEmail) } })
            @Html.ValidationMessageFor(model => model.ConfirmEmail, "", new { @class = "text-danger" })
        </fieldset>

        <fieldset class="formField">
            <div class="legend">@Html.DisplayNameFor(model => model.UserTypeId)</div>
            @Helper.ListToRadioButtonGroup("UserTypeId", (SelectList)ViewBag.UserTypes, Model.UserTypeId)
            @Html.ValidationMessageFor(model => model.UserTypeId, "", new { @class = "text-danger" })
        </fieldset>

        <fieldset class="formField">
            <div class="legend">
                @Html.DisplayNameFor(model => model.Verified)
                @Html.CheckBoxFor(model => model.Verified)
            </div>
            <div class="legend">
                @Html.DisplayNameFor(model => model.Blocked)
                @Html.CheckBoxFor(model => model.Blocked)
            </div>

        </fieldset>
        <div class="legend">@Html.DisplayNameFor(model => model.AvatarImageData)</div>
        @Helper.ImageUploader(Model.Id, "AvatarImageData", Model.GetAvatarURL(), "~/Images_Data/Loading_icon.gif", "Cliquez pour choisir votre avatar")
        @Html.ValidationMessageFor(model => model.AvatarImageData, "", new { @class = "text-danger" })



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@formSubmitCaption" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/NotificationsHandler")
    }