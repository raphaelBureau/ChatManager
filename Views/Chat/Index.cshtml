@model ChatManager.Models.User

@{
    ViewBag.Title = "ChatRoom";
}

<div style="display:grid; grid-template-columns: 65px auto; align-items:center">
    <img src="../favicon.png" style="width:56px">
    <h3>Salle de discussions</h3>
</div>
<hr />

<div class="main">
    <div style="display:grid; grid-template-columns:60px auto; column-gap:10px;">
        <div class="friendsListContainer" id="friendsListContainer" title="Cliquez sur un de vos amis pour clavarder avec lui...">
            <!-- friends of the connected user -->
        </div>
        <div>
            <div class="messagesPanel" id="messagesPanel" title="Cliquez sur un de vos messages pour l'éditer...'">
                <!-- messages -->
            </div>
            <div class="sendMessageLayout" id="sendMessagePanel" style="display: none">
                <input id="message" class="form-control" style="width:100% !important; max-width:1000px !important;" placeholder="Tapez votre message ici ..." title="Les urls d'image sont prises en compte.">
                <span id="send" class="icon fa fa-paper-plane" title="Envoyer" data-placement="bottom"></span>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script defer>
        // periodic refreshment
        let friends = new PartialRefresh("@Url.Action("Friends", "Chat")", "friendsListContainer", 20);
        let c = new PartialRefresh("@Url.Action("Chat", "Chat")", "messagesPanel", 5)

        function ajaxActionCall(actionLink, onload = null) {
            $.ajax({
                url: actionLink,
                method: 'GET',
                success: () => {
                    if (onload != null) onload();
                }
            });
        }
        let targetFriendsId = 0;
        if ('@Session["idFriendChatting"]' != null) {
            targetFriendsId = '@Session["idFriendChatting"]';
        }


        $(document).on('click', '.unselectedTarget', function () {
            let target = $(".selectedTarget");
            target.removeClass("selectedTarget");
            target.addClass("unselectedTarget");

            $(this).removeClass("unselectedTarget");
            $(this).addClass("selectedTarget");
            targetFriendsId = $(this).attr("userId");

            $("#sendMessagePanel").show();
            ajaxActionCall('/Chat/FriendChat?id=' + targetFriendsId, () => c.refresh(true));
        });


        // envoi d'un message
        function sendMessage() {
            var message = $('#message').val();
            $('#message').val("");
            if (message != "") {
                ajaxActionCall("/Chat/SendMessage?idtargetUser=" + targetFriendsId + "&message=" + message, () => { c.refresh(true) });
            }
        }
        $('#message').keypress(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                sendMessage();
            }
        });
        $('#send').click(function () {
            sendMessage();
        });
        $(document).on('keyup', function (event) {
            if (event.key == "Escape") {
                $("#message").val("");
            }
        });

        //let friendsPanelUpdater = new PartialRefresh("/Chat/GetFriendsList", "friendsListContainer", 5, UpdateFriendsCallback);
        //let messagesPanelUpdater = new PartialRefresh("/Chat/GetMessages", "messagesPanel", 5, UpdateMessagesCallback);
        //let currentTargetId = 0;
        //if (currentTargetId == 0)
        //    $("#sendMessagePanel").hide();

        //function UpdateFriendsCallback() {
        //    //messagesPanelUpdater.refresh(true);
        //    $(".unselectedTarget").click(function() {
        //        var userId = $(this).attr("userid");
        //        ajaxActionCall("/Chat/SetCurrentTarget/" + userId, () => { friendsPanelUpdater.refresh(true); messagesPanelUpdater.refresh(true); });
        //        $("#sendMessagePanel").show();
        //    })
        //}
        //let editing = false;
        //let targetTyping = false;

        //function setEditing(value) {
        //    editing = value;
        //    if (editing) {
        //        messagesPanelUpdater.pause();
        //        $("#sendMessagePanel").hide()
        //    }
        //    else {
        //        messagesPanelUpdater.restart();
        //        $("#sendMessagePanel").show()
        //    }
        //}
        
        //$('#message').focus(function (event) {
        //    ajaxActionCall("/chat/IsTyping");
        //});
        //$('#message').blur(function (event) {
        //    ajaxActionCall("/chat/StopTyping");
        //});
        
        //function UpdateMessagesCallback() {
        //    $("#typing").hide();
        //    $(".editMessage").hide();
        //    $("#messagesPanel").scrollTop($("#messagesPanel")[0].scrollHeight + 100);

        //    $(".contentImage").click(function (event) {
        //        event.stopPropagation();
        //    })
        //    $("a").click(function (event) {
        //        event.stopPropagation();
        //    })
        //    $(".sent").click(function () {
        //        if (!editing) {
        //            setEditing(true);
        //            var message_id = $(this).attr("id").split("_")[1];
        //            $("#edit_" + message_id).show();
        //            $("#sent_" + message_id).hide();
        //            $("#delete_" + message_id).click(function () {
        //                setEditing(false);
        //                messagesPanelUpdater.confirmedCommand("Effacer ce message", "/Chat/Delete/" + message_id);
        //            })
        //            $("#update_" + message_id).click(function () {
        //                setEditing(false);
        //                var message = $("#" + message_id).val();
        //                messagesPanelUpdater.command("/Chat/Update?id=" + message_id + "&message=" + message);
        //            })
        //            $('#' + message_id).keypress(function (event) {
        //                var keycode = (event.keyCode ? event.keyCode : event.which);
        //                if (keycode == '13') {
        //                    setEditing(false);
        //                    var message = $("#" + message_id).val();
        //                    messagesPanelUpdater.command("/Chat/Update?id=" + message_id + "&message=" + message);
        //                }
        //            });
        //            $(document).on('keyup', function (event) {
        //                if (event.key == "Escape") {
        //                    $("#edit_" + message_id).hide();
        //                    $("#sent_" + message_id).show();
        //                    setEditing(false);
        //                }
        //            });
        //        }
        //    });
        //}

        //setInterval(() => { ajaxActionCall("/Chat/IsTargetTyping", UpdateTyping); }, 3000);

        //function UpdateTyping(show) {
        //    if (show)
        //        $("#typing").show();
        //    else
        //        $("#typing").hide();
        //}

        //$("#send").click(function () {
        //    sendMessage();
        //})
    </script>
}

